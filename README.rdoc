# Ecommerce Project

Este es un proyecto de ecommerce desarrollado utilizando las siguientes tecnologías:

- **Docker**
- **Rails 3.2.22.5**
- **Ruby 1.9.3**
- **PostgreSQL 9**

El proyecto se levanta y ejecuta fácilmente utilizando Docker y Docker Compose.

## Requisitos previos

Antes de comenzar, asegúrate de tener los siguientes programas instalados en tu máquina:

- [Docker](https://www.docker.com/get-started)
- [Docker Compose](https://docs.docker.com/compose/install/)

## Instalación

### 1. Clonar el repositorio

Primero, clona este repositorio a tu máquina local:

```bash
git clone https://github.com/05andres/ecommerce.git
cd ecommerce

2. Construir las imágenes de Docker

Construye las imágenes necesarias para el proyecto utilizando Docker Compose:

docker-compose build

3. Levantar los contenedores

Levanta los contenedores del proyecto en el puerto 3001:

docker-compose up

Esto iniciará todos los servicios definidos en el archivo docker-compose.yml, incluyendo PostgreSQL y el servidor Rails, los cuales estarán accesibles en:

http://localhost:3001

Nota: Puedes verificar que el puerto 3001 está configurado correctamente en tu archivo docker-compose.yml.
Configuración del archivo .env

Antes de ejecutar el proyecto, configura el archivo .env con las variables de entorno necesarias. Crea un archivo .env en la raíz de tu proyecto y agrega la siguiente variable de entorno:

JWT_SECRET_KEY=tu_clave_secreta

Nota: Asegúrate de reemplazar tu_clave_secreta por una clave segura y secreta que usarás para la autenticación JWT.
Comandos útiles

    Levantar contenedores en segundo plano (detached mode):

docker-compose up -d

Detener los contenedores:

docker-compose down

Ver logs de los contenedores:

docker-compose logs

Construir y ejecutar contenedores de nuevo:

    docker-compose up --build

Entorno de desarrollo

Si necesitas trabajar en un entorno de desarrollo o realizar migraciones de base de datos, asegúrate de tener acceso a los contenedores de desarrollo. Puedes conectarte a la consola de un contenedor con:

docker-compose exec <nombre_del_servicio> bash

Notas adicionales

    Base de datos: El proyecto usa PostgreSQL 9. Asegúrate de que la base de datos esté configurada correctamente antes de comenzar a trabajar con la aplicación.
    JWT: El proyecto utiliza JWT para la autenticación. Asegúrate de configurar la clave secreta en el archivo .env como se indicó anteriormente.
    Otras dependencias: Si necesitas instalar dependencias adicionales, puedes hacerlo dentro del contenedor correspondiente, por ejemplo, utilizando docker-compose exec.

Contribuciones

Si deseas contribuir a este proyecto, por favor sigue los siguientes pasos:

    Haz un fork del repositorio.
    Crea una nueva rama para tu funcionalidad (git checkout -b feature/nueva-funcionalidad).
    Realiza tus cambios y haz commit de ellos (git commit -am 'Añadir nueva funcionalidad').
    Haz push a tu rama (git push origin feature/nueva-funcionalidad).
    Abre un Pull Request describiendo los cambios realizados.

Licencia

Este proyecto está bajo la [licencia que uses] - consulta el archivo LICENSE para más detalles.


La sección para configurar el archivo `.env` ahora está después de la construcción y levantamiento de contenedores.
